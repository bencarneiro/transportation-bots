# Generated by Django 4.1.5 on 2023-06-26 19:19

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        (
            "views",
            "0012_monthlyunlinkedpassengertrips_monthlyvehiclerevenuehours_monthlyvehiclerevenuemiles_monthlyvehicleso",
        ),
    ]

    operations = [
        migrations.CreateModel(
            name="Routes",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("route_id", models.PositiveBigIntegerField()),
                (
                    "route_short_name",
                    models.CharField(blank=True, max_length=64, null=True),
                ),
                (
                    "route_long_name",
                    models.CharField(blank=True, max_length=256, null=True),
                ),
                ("route_type", models.CharField(blank=True, max_length=64, null=True)),
                ("route_url", models.CharField(blank=True, max_length=128, null=True)),
                ("route_color", models.CharField(blank=True, max_length=16, null=True)),
                (
                    "route_text_color",
                    models.CharField(blank=True, max_length=16, null=True),
                ),
                (
                    "transit_agency",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="views.transitagency",
                    ),
                ),
            ],
            options={
                "db_table": "routes",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Shapes",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("shape_id", models.PositiveIntegerField()),
                ("shape_pt_lat", models.FloatField()),
                ("shape_pt_lon", models.FloatField()),
                ("shape_pt_sequence", models.PositiveIntegerField(null=True)),
                ("shape_dist_traveled", models.FloatField()),
                (
                    "transit_agency",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="views.transitagency",
                    ),
                ),
            ],
            options={
                "db_table": "shapes",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Stops",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("stop_id", models.PositiveIntegerField()),
                ("at_street", models.CharField(max_length=128)),
                ("corner_placement", models.CharField(max_length=16)),
                ("heading", models.PositiveSmallIntegerField(blank=True, null=True)),
                (
                    "location_type",
                    models.PositiveSmallIntegerField(blank=True, null=True),
                ),
                ("on_street", models.CharField(max_length=128)),
                (
                    "parent_station",
                    models.PositiveSmallIntegerField(blank=True, null=True),
                ),
                ("stop_code", models.PositiveSmallIntegerField(blank=True, null=True)),
                ("stop_desc", models.CharField(max_length=128)),
                ("latitude", models.FloatField(null=True)),
                ("longitude", models.FloatField(null=True)),
                ("stop_name", models.CharField(max_length=128)),
                ("stop_position", models.CharField(max_length=16)),
                ("stop_timezone", models.CharField(max_length=16)),
                ("stop_url", models.CharField(max_length=128)),
                ("wheelchair_boarding", models.BooleanField(default=True)),
                (
                    "transit_agency",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="views.transitagency",
                    ),
                ),
            ],
            options={
                "db_table": "stops",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Trips",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("trip_id", models.CharField(max_length=128)),
                ("service_id", models.CharField(max_length=64)),
                ("trip_headsign", models.CharField(max_length=64)),
                ("direction_id", models.IntegerField(default=0)),
                ("block_id", models.CharField(max_length=64)),
                (
                    "scheduled_trip_id",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("trip_short_name", models.CharField(max_length=64)),
                ("wheelchair_accessible", models.BooleanField(default=True)),
                ("bikes_allowed", models.BooleanField(default=True)),
                (
                    "route",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="views.routes",
                    ),
                ),
                (
                    "shape",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="views.shapes",
                    ),
                ),
                (
                    "transit_agency",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="views.transitagency",
                    ),
                ),
            ],
            options={
                "db_table": "trips",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="StopTimes",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("arrival_time", models.DateTimeField(blank=True, null=True)),
                ("departure_time", models.DateTimeField(blank=True, null=True)),
                ("stop_sequence", models.PositiveSmallIntegerField(null=True)),
                ("pickup_type", models.PositiveSmallIntegerField(null=True)),
                ("drop_off_type", models.PositiveSmallIntegerField(null=True)),
                ("shape_dist_traveled", models.FloatField(null=True)),
                ("timepoint", models.BooleanField(default=0)),
                (
                    "stop",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING, to="views.stops"
                    ),
                ),
                (
                    "transit_agency",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="views.transitagency",
                    ),
                ),
                (
                    "trip",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING, to="views.trips"
                    ),
                ),
            ],
            options={
                "db_table": "stop_times",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="CalendarDates",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("date", models.DateField()),
                ("service_id", models.CharField(max_length=64)),
                ("exception_type", models.IntegerField(default=1)),
                (
                    "transit_agency",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="views.transitagency",
                    ),
                ),
            ],
            options={
                "db_table": "calendar_dates",
                "managed": True,
            },
        ),
    ]
